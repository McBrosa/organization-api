var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.305,1,1.516]],["body/controllers/AppController.html",[0,1.891,1,2.197,2,1.447,3,0.692,4,0.586,5,0.586,6,2.368,7,0.586,8,1.891,9,3.654,10,1.681,11,0.055,12,1.085,13,2.964,14,1.447,15,1.636,16,0.905,17,0.939,18,1.822,19,2.368,20,0.692,21,0.316,22,1.975,23,1.975,24,1.447,25,2.964,26,0.031,27,0.041,28,0.031]],["title/modules/AppModule.html",[29,1.305,30,1.516]],["body/modules/AppModule.html",[1,2.085,2,1.533,3,0.51,4,0.432,5,0.432,11,0.055,16,1.092,17,0.691,18,1.873,19,1.744,20,0.51,21,0.232,26,0.023,27,0.033,28,0.023,29,1.795,30,2.652,31,1.066,32,1.066,33,1.454,34,1.454,35,1.066,36,2.449,37,1.454,38,1.744,39,1.744,40,1.744,41,2.165,42,2.091,43,1.454,44,1.454,45,2.183,46,2.936,47,2.183,48,1.744,49,1.066,50,2.183,51,3.139,52,1.454,53,2.449,54,1.781,55,2.183,56,2.183,57,2.183,58,1.744,59,2.183,60,2.183,61,2.183]],["title/injectables/AppService.html",[18,1.129,62,0.978]],["body/injectables/AppService.html",[3,0.751,4,0.635,5,0.635,7,0.635,8,1.992,9,3.767,11,0.053,12,1.176,14,1.569,15,1.723,16,0.751,17,1.018,18,1.723,20,0.751,21,0.342,24,1.569,26,0.034,27,0.043,28,0.034,62,1.494,63,1.823,64,2.567,65,3.213,66,3.213,67,2.567]],["title/classes/CreateOrganizationDto.html",[21,0.284,68,1.129]],["body/classes/CreateOrganizationDto.html",[3,0.467,4,0.395,5,0.395,7,0.395,10,2.187,11,0.053,12,1.411,15,1.927,16,0.467,20,0.467,21,0.213,26,0.021,27,0.031,28,0.021,68,1.244,69,1.134,70,3.283,71,1.331,72,2.351,73,2.791,74,2.738,75,2.007,76,2.791,77,1.813,78,3.783,79,3.855,80,2.944,81,1.445,82,1.998,83,2.351,84,1.998,85,1.998,86,1.998,87,2.944,88,2.944,89,1.998,90,4.11,91,1.331,92,3.08,93,1.134,94,1.331]],["title/injectables/DatabaseConfig.html",[54,1.516,62,0.978]],["body/injectables/DatabaseConfig.html",[3,0.639,4,0.541,5,0.541,7,0.541,8,1.793,11,0.055,12,1.345,14,1.336,16,0.968,17,0.867,20,0.639,21,0.291,22,1.823,24,1.336,26,0.029,27,0.039,28,0.029,49,1.336,52,1.823,54,2.083,62,1.345,63,1.552,75,1.336,77,1.001,95,2.185,96,4.431,97,2.185,98,2.735,99,4.759,100,2.735,101,1.823,102,1.823,103,2.735,104,3.672,105,2.735,106,2.735]],["title/classes/Organization.html",[21,0.284,81,0.847]],["body/classes/Organization.html",[3,0.517,4,0.437,5,0.437,7,0.437,10,2.428,11,0.055,12,1.567,15,1.881,16,0.517,20,0.517,21,0.235,26,0.023,27,0.033,28,0.023,69,1.255,72,2.531,73,2.958,74,2.967,75,1.808,76,2.958,77,1.567,78,2.531,81,1.004,83,2.531,93,1.255,94,1.474,107,1.474,108,2.467,109,3.169,110,2.212,111,3.169,112,2.212,113,3.169,114,2.212,115,3.169,116,3.169,117,3.169,118,2.212,119,3.169,120,2.212,121,2.212,122,2.212,123,2.212,124,1.474,125,2.212,126,2.212,127,1.767]],["title/controllers/OrganizationController.html",[0,1.305,128,1.516]],["body/controllers/OrganizationController.html",[0,0.75,2,0.75,3,0.359,4,0.304,5,0.304,7,0.304,8,1.176,10,2.201,11,0.055,12,1.42,14,1.894,15,1.934,16,0.786,17,0.486,20,0.359,21,0.163,22,1.023,23,1.023,24,1.894,26,0.016,27,0.025,28,0.016,68,1.639,75,1.981,77,1.339,81,0.486,101,2.436,102,2.436,108,2.585,128,1.366,129,1.226,130,1.535,131,1.605,132,2.689,133,1.924,134,1.924,135,1.924,136,2.374,137,1.226,138,2.972,139,1.535,140,1.535,141,1.226,142,2.408,143,1.535,144,1.226,145,1.535,146,1.226,147,2.408,148,1.535,149,1.226,150,2.051,151,2.408,152,1.535,153,2.408,154,1.535,155,1.535,156,1.535,157,1.535,158,1.256,159,1.226,160,1.226,161,1.605,162,1.226,163,1.535,164,1.535,165,1.535,166,1.535,167,1.535,168,1.535,169,1.535,170,1.535,171,1.535,172,1.535,173,1.535,174,1.535]],["title/modules/OrganizationModule.html",[29,1.305,41,1.305]],["body/modules/OrganizationModule.html",[2,1.742,3,0.612,4,0.518,5,0.518,11,0.055,16,1.064,17,0.83,20,0.612,21,0.279,26,0.028,27,0.037,28,0.028,29,1.98,31,1.279,32,1.279,33,1.746,34,1.746,35,1.279,36,2.702,37,1.746,41,2.294,42,2.377,43,1.746,44,1.746,46,2.093,48,2.093,49,1.279,81,0.83,128,2.301,158,1.985,159,2.093,175,2.093,176,2.093,177,2.62,178,2.62,179,2.093,180,2.62]],["title/injectables/OrganizationService.html",[62,0.978,158,1.129]],["body/injectables/OrganizationService.html",[3,0.332,4,0.281,5,0.281,7,0.281,8,1.106,11,0.056,12,1.441,14,1.832,15,1.897,16,0.877,17,0.45,20,0.332,21,0.151,23,0.947,24,1.832,26,0.015,27,0.024,28,0.015,49,0.694,62,0.829,63,0.806,68,1.488,75,2.109,77,1.374,81,0.895,93,0.806,97,1.81,101,2.5,102,2.5,108,2.807,124,0.947,131,1.51,132,2.575,133,1.81,134,1.81,135,1.81,136,1.81,137,1.81,141,1.81,144,1.81,146,1.81,149,1.81,150,1.996,158,0.957,160,1.135,161,1.51,162,1.135,179,1.135,181,1.135,182,1.421,183,2.575,184,1.421,185,2.266,186,1.421,187,1.421,188,1.421,189,1.421,190,1.421,191,1.421,192,1.421,193,1.421,194,1.421,195,1.135,196,1.421,197,1.421,198,1.421,199,1.421,200,1.421,201,1.421,202,1.421,203,1.421,204,1.421,205,1.421,206,1.421,207,1.421,208,1.421,209,1.421,210,1.421,211,1.421,212,1.421]],["title/classes/UpdateOrganizationDto.html",[21,0.284,150,1.305]],["body/classes/UpdateOrganizationDto.html",[3,0.751,4,0.635,5,0.635,11,0.055,16,1.047,20,0.751,21,0.342,26,0.034,27,0.043,28,0.034,68,1.357,69,1.823,71,2.141,91,2.141,131,2.141,150,1.992,161,2.141,213,2.567,214,4.482,215,2.567,216,2.567,217,3.213,218,3.213,219,3.213]],["title/coverage.html",[220,2.409]],["body/coverage.html",[0,1.723,1,1.463,5,0.51,6,2.06,11,0.053,18,1.09,21,0.428,26,0.027,27,0.037,28,0.027,35,1.259,53,1.719,54,1.463,62,1.473,64,2.06,68,1.09,70,2.06,71,2.351,77,0.944,81,0.817,95,2.06,107,1.719,128,1.463,129,2.06,150,1.259,158,1.09,181,2.06,195,2.06,213,2.06,220,1.719,221,2.06,222,2.579,223,2.579,224,5.003,225,3.529,226,2.06,227,2.579,228,4.023,229,2.579,230,2.06,231,2.579,232,2.579,233,2.579,234,2.579,235,2.579,236,2.579,237,2.579]],["title/dependencies.html",[32,1.565,238,2.247]],["body/dependencies.html",[11,0.056,17,0.891,26,0.03,27,0.039,28,0.03,32,1.373,49,1.373,52,1.874,91,1.874,124,1.874,215,2.247,216,2.247,239,3.742,240,2.813,241,2.813,242,2.813,243,2.813,244,2.813,245,2.813,246,3.742,247,2.813,248,2.813,249,2.813,250,2.813,251,2.813,252,2.813,253,2.813,254,2.813,255,2.813,256,2.813,257,2.813,258,2.813,259,2.813,260,2.813,261,2.813,262,2.813,263,2.813,264,2.813,265,2.813,266,2.813,267,2.813]],["title/miscellaneous/enumerations.html",[268,0.949,269,2.56]],["body/miscellaneous/enumerations.html",[7,0.752,11,0.048,26,0.04,27,0.048,28,0.04,74,3.015,93,2.158,94,2.534,107,2.534,268,1.607,269,3.038,270,3.803]],["title/miscellaneous/functions.html",[268,0.949,271,2.56]],["body/miscellaneous/functions.html",[7,0.758,11,0.048,26,0.04,27,0.048,28,0.04,35,2.367,230,3.062,268,1.619,271,3.062,272,3.833]],["title/index.html",[7,0.444,273,2.247,274,2.247]],["body/index.html",[4,0.462,11,0.054,26,0.025,27,0.035,28,0.025,67,1.867,81,0.74,92,1.867,183,1.867,220,1.557,221,2.632,275,3.817,276,2.337,277,2.337,278,2.337,279,2.337,280,4.759,281,2.337,282,2.337,283,2.337,284,4.66,285,2.337,286,2.337,287,3.295,288,2.337,289,2.337,290,2.337,291,2.337,292,3.295,293,3.295,294,2.337,295,2.337,296,2.337,297,2.337,298,2.337,299,2.337,300,2.337,301,2.337,302,2.337,303,2.337,304,2.337,305,2.337,306,2.337,307,2.632,308,3.295,309,3.295,310,2.337,311,2.337,312,2.337,313,2.337,314,2.337,315,2.337,316,2.337,317,2.337,318,2.337,319,2.337,320,2.337,321,2.337,322,2.337]],["title/modules.html",[31,1.765]],["body/modules.html",[11,0.047,26,0.039,27,0.047,28,0.039,30,2.125,31,1.829,41,1.829,307,3.582,323,4.485,324,4.485,325,4.485]],["title/overview.html",[326,2.888]],["body/overview.html",[2,1.456,11,0.05,18,1.828,26,0.031,27,0.041,28,0.031,29,1.456,30,2.766,31,1.456,32,1.456,33,1.987,34,1.987,35,1.456,36,1.987,37,1.987,38,2.382,39,2.382,40,2.382,41,2.322,42,2.59,43,1.987,44,1.987,63,1.692,69,1.692,158,1.828,175,2.382,176,2.382,326,2.382,327,3.888,328,3.888]],["title/miscellaneous/variables.html",[268,0.949,329,2.56]],["body/miscellaneous/variables.html",[7,0.619,11,0.054,26,0.033,27,0.042,28,0.033,53,2.674,58,2.502,77,1.147,127,2.502,226,2.502,268,1.323,329,2.502,330,3.132,331,3.132,332,3.132,333,4.014,334,3.132,335,4.014,336,3.132,337,3.132,338,3.132,339,3.132,340,3.132,341,3.132,342,3.132,343,3.132,344,3.132,345,3.132,346,3.132,347,3.132,348,3.132]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateOrganizationDto.html":{},"injectables/DatabaseConfig.html":{},"classes/Organization.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":224,"title":{},"body":{"coverage.html":{}}}],["0.1.1",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["0.2.29",{"_index":267,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":240,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":228,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":225,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":229,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":232,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":234,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":233,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":235,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":327,"title":{},"body":{"overview.html":{}}}],["3",{"_index":328,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":266,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":117,"title":{},"body":{"classes/Organization.html":{}}}],["6.6.3",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["7.5.4",{"_index":239,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["amazing",{"_index":315,"title":{},"body":{"index.html":{}}}],["api.herokuapp.com/api",{"_index":306,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":90,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["apiproperty({description",{"_index":79,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["app",{"_index":282,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["backers",{"_index":316,"title":{},"body":{"index.html":{}}}],["body",{"_index":153,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/OrganizationModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":325,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":323,"title":{},"body":{"modules.html":{}}}],["class",{"_index":21,"title":{"classes/CreateOrganizationDto.html":{},"classes/Organization.html":{},"classes/UpdateOrganizationDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateOrganizationDto.html":{},"injectables/DatabaseConfig.html":{},"classes/Organization.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["classes",{"_index":69,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/Organization.html":{},"classes/UpdateOrganizationDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_organizationmodule",{"_index":175,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule_providers",{"_index":176,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["code",{"_index":298,"title":{},"body":{"index.html":{}}}],["column",{"_index":122,"title":{},"body":{"classes/Organization.html":{}}}],["column('date",{"_index":119,"title":{},"body":{"classes/Organization.html":{}}}],["column('int",{"_index":113,"title":{},"body":{"classes/Organization.html":{}}}],["column('numeric",{"_index":109,"title":{},"body":{"classes/Organization.html":{}}}],["column('varchar",{"_index":115,"title":{},"body":{"classes/Organization.html":{}}}],["compodocaccessible",{"_index":300,"title":{},"body":{"index.html":{}}}],["config",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":99,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["const",{"_index":194,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["constructor",{"_index":97,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/OrganizationService.html":{}}}],["constructor(configservice",{"_index":98,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["constructor(organizationsrepository",{"_index":182,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/DatabaseConfig.html":{},"controllers/OrganizationController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/OrganizationController.html":{}},"body":{"controllers/AppController.html":{},"controllers/OrganizationController.html":{},"coverage.html":{}}}],["controller('organization",{"_index":163,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"overview.html":{}}}],["coverage",{"_index":220,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":131,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{}}}],["create(@body",{"_index":164,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["create(createorganizationdto",{"_index":137,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["createorganizationdto",{"_index":68,"title":{"classes/CreateOrganizationDto.html":{}},"body":{"classes/CreateOrganizationDto.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["createorganizationdto.employeecount",{"_index":201,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["createorganizationdto.management",{"_index":199,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["createorganizationdto.name",{"_index":197,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["createorganizationdto.startdate",{"_index":203,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["createquerybuilder('organization",{"_index":207,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["createtypeormoptions",{"_index":96,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["database",{"_index":335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database.config",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["databaseconfig",{"_index":54,"title":{"injectables/DatabaseConfig.html":{}},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfig.html":{},"coverage.html":{}}}],["date",{"_index":87,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/OrganizationModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrganizationDto.html":{},"classes/Organization.html":{},"controllers/OrganizationController.html":{}}}],["default",{"_index":331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateOrganizationDto.html":{},"injectables/DatabaseConfig.html":{},"classes/Organization.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["delete",{"_index":156,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["delete(':id",{"_index":147,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["demo",{"_index":302,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/OrganizationModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":92,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"index.html":{}}}],["development",{"_index":283,"title":{},"body":{"index.html":{}}}],["dist/**/*.entity.js",{"_index":348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":221,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["dto/create",{"_index":160,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["dto/update",{"_index":162,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["e2e",{"_index":294,"title":{},"body":{"index.html":{}}}],["employeecount",{"_index":73,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/Organization.html":{}}}],["employees",{"_index":80,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["entities",{"_index":347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":121,"title":{},"body":{"classes/Organization.html":{}}}],["entity('organization",{"_index":125,"title":{},"body":{"classes/Organization.html":{}}}],["enum",{"_index":83,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/Organization.html":{}}}],["enumerations",{"_index":269,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateOrganizationDto.html":{},"injectables/DatabaseConfig.html":{},"classes/Organization.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/OrganizationModule.html":{},"overview.html":{}}}],["express",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":218,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["false",{"_index":346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateOrganizationDto.html":{},"injectables/DatabaseConfig.html":{},"classes/Organization.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["findall",{"_index":132,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["findone",{"_index":133,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["findone(@param('id",{"_index":167,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["findone(id",{"_index":141,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["findsome",{"_index":134,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["findsome(@query('name",{"_index":169,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["findsome(name",{"_index":144,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["founded",{"_index":88,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["framework",{"_index":276,"title":{},"body":{"index.html":{}}}],["function",{"_index":231,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":271,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":297,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":142,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["getmany",{"_index":209,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["getting",{"_index":273,"title":{"index.html":{}},"body":{}}],["grow",{"_index":312,"title":{},"body":{"index.html":{}}}],["here",{"_index":67,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["heroku",{"_index":304,"title":{},"body":{"index.html":{}}}],["hierarchy",{"_index":299,"title":{},"body":{"index.html":{}}}],["host",{"_index":336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hosted",{"_index":303,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":301,"title":{},"body":{"index.html":{}}}],["https://nestjs",{"_index":305,"title":{},"body":{"index.html":{}}}],["id",{"_index":108,"title":{},"body":{"classes/Organization.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["identifier",{"_index":222,"title":{},"body":{"coverage.html":{}}}],["im",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["implements",{"_index":105,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateOrganizationDto.html":{},"injectables/DatabaseConfig.html":{},"classes/Organization.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/OrganizationModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateOrganizationDto.html":{},"injectables/DatabaseConfig.html":{},"classes/Organization.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateOrganizationDto.html":{},"injectables/DatabaseConfig.html":{},"classes/Organization.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{}}}],["injectable",{"_index":62,"title":{"injectables/AppService.html":{},"injectables/DatabaseConfig.html":{},"injectables/OrganizationService.html":{}},"body":{"injectables/AppService.html":{},"injectables/DatabaseConfig.html":{},"injectables/OrganizationService.html":{},"coverage.html":{}}}],["injectables",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"injectables/DatabaseConfig.html":{},"injectables/OrganizationService.html":{},"overview.html":{}}}],["injectrepository",{"_index":192,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["injectrepository(organization",{"_index":193,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["installation",{"_index":279,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":281,"title":{},"body":{"index.html":{}}}],["isglobal",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":318,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/OrganizationModule.html":{},"overview.html":{}}}],["length",{"_index":116,"title":{},"body":{"classes/Organization.html":{}}}],["license",{"_index":322,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":309,"title":{},"body":{"index.html":{}}}],["load",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["management",{"_index":74,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/Organization.html":{},"miscellaneous/enumerations.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateOrganizationDto.html":{},"injectables/DatabaseConfig.html":{},"classes/Organization.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/DatabaseConfig.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["miscellaneous",{"_index":268,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":308,"title":{},"body":{"index.html":{}}}],["mode",{"_index":287,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/OrganizationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrganizationModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/OrganizationModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":321,"title":{},"body":{"index.html":{}}}],["name",{"_index":75,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"injectables/DatabaseConfig.html":{},"classes/Organization.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["nest",{"_index":275,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/DatabaseConfig.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfig.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":241,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":215,"title":{},"body":{"classes/UpdateOrganizationDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":91,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/UpdateOrganizationDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfig.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"dependencies.html":{}}}],["nestjsx/crud",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":195,"title":{},"body":{"injectables/OrganizationService.html":{},"coverage.html":{}}}],["npm",{"_index":280,"title":{},"body":{"index.html":{}}}],["number",{"_index":78,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/Organization.html":{}}}],["number(process.env.app_port",{"_index":334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":310,"title":{},"body":{"index.html":{}}}],["optional",{"_index":102,"title":{},"body":{"injectables/DatabaseConfig.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["organization",{"_index":81,"title":{"classes/Organization.html":{}},"body":{"classes/CreateOrganizationDto.html":{},"classes/Organization.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"coverage.html":{},"index.html":{}}}],["organization.controller",{"_index":178,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["organization.dto",{"_index":161,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{}}}],["organization.dto.ts",{"_index":71,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["organization.dto.ts:14",{"_index":82,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["organization.dto.ts:21",{"_index":85,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["organization.dto.ts:27",{"_index":89,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["organization.dto.ts:8",{"_index":86,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["organization.employeecount",{"_index":200,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["organization.entity",{"_index":179,"title":{},"body":{"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{}}}],["organization.management",{"_index":198,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["organization.name",{"_index":196,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["organization.service",{"_index":159,"title":{},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{}}}],["organization.startdate",{"_index":202,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["organization/organization.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["organizationcontroller",{"_index":128,"title":{"controllers/OrganizationController.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"coverage.html":{}}}],["organizationmodule",{"_index":41,"title":{"modules/OrganizationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrganizationModule.html":{},"modules.html":{},"overview.html":{}}}],["organizationservice",{"_index":158,"title":{"injectables/OrganizationService.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"coverage.html":{},"overview.html":{}}}],["organizationsrepository",{"_index":185,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/OrganizationModule.html":{},"overview.html":{}}}],["overview",{"_index":326,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":238,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":155,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["param('id",{"_index":171,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["parameters",{"_index":101,"title":{},"body":{"injectables/DatabaseConfig.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["partialtype",{"_index":214,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["password",{"_index":341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pg",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":319,"title":{},"body":{"index.html":{}}}],["port",{"_index":333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":138,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["postgres",{"_index":127,"title":{},"body":{"classes/Organization.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":130,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["primarygeneratedcolumn",{"_index":123,"title":{},"body":{"classes/Organization.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":111,"title":{},"body":{"classes/Organization.html":{}}}],["private",{"_index":93,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/Organization.html":{},"injectables/OrganizationService.html":{},"miscellaneous/enumerations.html":{}}}],["process.env.db_host",{"_index":337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_name",{"_index":343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_password",{"_index":342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_port",{"_index":338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_username",{"_index":340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":289,"title":{},"body":{"index.html":{}}}],["project",{"_index":311,"title":{},"body":{"index.html":{}}}],["properties",{"_index":72,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/Organization.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/OrganizationModule.html":{},"overview.html":{}}}],["public",{"_index":94,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/Organization.html":{},"miscellaneous/enumerations.html":{}}}],["put",{"_index":154,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["put(':id",{"_index":151,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["query",{"_index":157,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["read",{"_index":320,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["reflect",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":135,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["remove(@param('id",{"_index":173,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["remove(id",{"_index":146,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["repository",{"_index":183,"title":{},"body":{"injectables/OrganizationService.html":{},"index.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/OrganizationModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateOrganizationDto.html":{},"injectables/DatabaseConfig.html":{},"classes/Organization.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateOrganizationDto.html":{},"injectables/DatabaseConfig.html":{},"classes/Organization.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/DatabaseConfig.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/DatabaseConfig.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["rimraf",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":284,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":262,"title":{},"body":{"dependencies.html":{}}}],["safe",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateOrganizationDto.html":{},"injectables/DatabaseConfig.html":{},"classes/Organization.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{},"index.html":{}}}],["sponsors",{"_index":314,"title":{},"body":{"index.html":{}}}],["src/.../config.ts",{"_index":330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":272,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../organization.entity.ts",{"_index":270,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["src/config.ts",{"_index":226,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database.config.ts",{"_index":95,"title":{},"body":{"injectables/DatabaseConfig.html":{},"coverage.html":{}}}],["src/database.config.ts:6",{"_index":100,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["src/database.config.ts:8",{"_index":103,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["src/main.ts",{"_index":230,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/organization/dto/create",{"_index":70,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"coverage.html":{}}}],["src/organization/dto/update",{"_index":213,"title":{},"body":{"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["src/organization/organization.controller.ts",{"_index":129,"title":{},"body":{"controllers/OrganizationController.html":{},"coverage.html":{}}}],["src/organization/organization.controller.ts:20",{"_index":139,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["src/organization/organization.controller.ts:25",{"_index":140,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["src/organization/organization.controller.ts:30",{"_index":143,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["src/organization/organization.controller.ts:35",{"_index":145,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["src/organization/organization.controller.ts:40",{"_index":152,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["src/organization/organization.controller.ts:48",{"_index":148,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["src/organization/organization.entity.ts",{"_index":107,"title":{},"body":{"classes/Organization.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/organization/organization.entity.ts:11",{"_index":112,"title":{},"body":{"classes/Organization.html":{}}}],["src/organization/organization.entity.ts:14",{"_index":118,"title":{},"body":{"classes/Organization.html":{}}}],["src/organization/organization.entity.ts:17",{"_index":120,"title":{},"body":{"classes/Organization.html":{}}}],["src/organization/organization.entity.ts:20",{"_index":110,"title":{},"body":{"classes/Organization.html":{}}}],["src/organization/organization.entity.ts:23",{"_index":114,"title":{},"body":{"classes/Organization.html":{}}}],["src/organization/organization.module.ts",{"_index":177,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["src/organization/organization.service.ts",{"_index":181,"title":{},"body":{"injectables/OrganizationService.html":{},"coverage.html":{}}}],["src/organization/organization.service.ts:10",{"_index":184,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/organization/organization.service.ts:16",{"_index":186,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/organization/organization.service.ts:26",{"_index":187,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/organization/organization.service.ts:30",{"_index":189,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/organization/organization.service.ts:37",{"_index":188,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/organization/organization.service.ts:41",{"_index":191,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/organization/organization.service.ts:48",{"_index":190,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["start",{"_index":285,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":288,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":290,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":76,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/Organization.html":{}}}],["started",{"_index":274,"title":{"index.html":{}},"body":{}}],["starter",{"_index":278,"title":{},"body":{"index.html":{}}}],["statements",{"_index":223,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateOrganizationDto.html":{},"classes/Organization.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["support",{"_index":307,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supported",{"_index":126,"title":{},"body":{"classes/Organization.html":{}}}],["svg",{"_index":324,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":264,"title":{},"body":{"dependencies.html":{}}}],["swaggerpartialtype",{"_index":217,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["swaggerpartialtype(createorganizationdto",{"_index":219,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["synchronize",{"_index":344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":237,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":236,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":293,"title":{},"body":{"index.html":{}}}],["test:covcode",{"_index":296,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":295,"title":{},"body":{"index.html":{}}}],["tests",{"_index":292,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":313,"title":{},"body":{"index.html":{}}}],["this.appservice.status",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.configservice.get('database",{"_index":106,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["this.organizationservice.create(createorganizationdto",{"_index":165,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.organizationservice.findall",{"_index":166,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.organizationservice.findone(id",{"_index":168,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.organizationservice.findsome(name",{"_index":170,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.organizationservice.remove(id",{"_index":174,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.organizationservice.update(id",{"_index":172,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.organizationsrepository",{"_index":206,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationsrepository.delete",{"_index":212,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationsrepository.find",{"_index":205,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationsrepository.findone",{"_index":210,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationsrepository.save(organization",{"_index":204,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationsrepository.update",{"_index":211,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["true",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":77,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"injectables/DatabaseConfig.html":{},"classes/Organization.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":124,"title":{},"body":{"classes/Organization.html":{},"injectables/OrganizationService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/OrganizationModule.html":{}}}],["typeormmodule.forfeature([organization",{"_index":180,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["typeormmodule.forrootasync",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormoptionsfactory",{"_index":104,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["types",{"_index":216,"title":{},"body":{"classes/UpdateOrganizationDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":277,"title":{},"body":{"index.html":{}}}],["ui",{"_index":265,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":84,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["unit",{"_index":291,"title":{},"body":{"index.html":{}}}],["update",{"_index":136,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["update(id",{"_index":149,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["updateorganizationdto",{"_index":150,"title":{"classes/UpdateOrganizationDto.html":{}},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["useclass",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["username",{"_index":339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":329,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":286,"title":{},"body":{"index.html":{}}}],["where('organization.name",{"_index":208,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["you'd",{"_index":317,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/OrganizationModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            status\n                        \n                        \n                    \n                \n            \n            \n                \nstatus()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  status(): string {\n    return this.appService.status();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nOrganizationModule\n\nOrganizationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nOrganizationModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OrganizationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { OrganizationModule } from './organization/organization.module';\nimport { ConfigModule } from '@nestjs/config';\n\nimport { config } from './config';\nimport { DatabaseConfig } from './database.config';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [config],\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useClass: DatabaseConfig,\n    }),\n    OrganizationModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            status\n                        \n                        \n                    \n                \n            \n            \n                \nstatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  status(): string {\n    return 'Im here \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrganizationDto.html":{"url":"classes/CreateOrganizationDto.html","title":"class - CreateOrganizationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrganizationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/organization/dto/create-organization.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                employeeCount\n                            \n                            \n                                management\n                            \n                            \n                                name\n                            \n                            \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            employeeCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The number of employees at the organization', type: Number})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/organization/dto/create-organization.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            management\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The management type of an organization', enum: undefined, type: Number})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/organization/dto/create-organization.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the organization', type: String})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/organization/dto/create-organization.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The date the organization was founded', type: String})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/organization/dto/create-organization.dto.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateOrganizationDto {\n  @ApiProperty({\n    description: 'The name of the organization',\n    type: String,\n  })\n  name: string;\n\n  @ApiProperty({\n    description: 'The number of employees at the organization',\n    type: Number,\n  })\n  employeeCount: number;\n\n  @ApiProperty({\n    description: 'The management type of an organization',\n    enum: ['private', 'public'],\n    type: Number,\n  })\n  management: number;\n\n  @ApiProperty({\n    description: 'The date the organization was founded',\n    type: String,\n  })\n  startDate: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseConfig.html":{"url":"injectables/DatabaseConfig.html","title":"injectable - DatabaseConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database.config.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/database.config.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTypeOrmOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/database.config.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class DatabaseConfig implements TypeOrmOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createTypeOrmOptions() {\n    return this.configService.get('database');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Organization.html":{"url":"classes/Organization.html","title":"class - Organization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/organization/organization.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                employeeCount\n                            \n                            \n                                id\n                            \n                            \n                                management\n                            \n                            \n                                name\n                            \n                            \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            employeeCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('numeric')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/organization/organization.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/organization/organization.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            management\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Management\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('int')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/organization/organization.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('varchar', {length: 500})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/organization/organization.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('date')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/organization/organization.entity.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\nenum Management {\n  private,\n  public,\n}\n\n@Entity('organization')\nexport class Organization {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column('varchar', { length: 500 })\n  name: string;\n\n  @Column('date')\n  startDate: string;\n\n  @Column('numeric')\n  employeeCount: number;\n\n  @Column('int') // enum not supported for postgres\n  management: Management;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrganizationController.html":{"url":"controllers/OrganizationController.html","title":"controller - OrganizationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrganizationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/organization/organization.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                organization\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                findSome\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createOrganizationDto: CreateOrganizationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/organization/organization.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrganizationDto\n                                    \n                                                CreateOrganizationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/organization/organization.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/organization/organization.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findSome\n                        \n                        \n                    \n                \n            \n            \n                \nfindSome(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/organization/organization.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/organization/organization.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateOrganizationDto: UpdateOrganizationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/organization/organization.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateOrganizationDto\n                                    \n                                                UpdateOrganizationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { OrganizationService } from './organization.service';\nimport { CreateOrganizationDto } from './dto/create-organization.dto';\nimport { UpdateOrganizationDto } from './dto/update-organization.dto';\n\n@Controller('organization')\nexport class OrganizationController {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @Post()\n  create(@Body() createOrganizationDto: CreateOrganizationDto) {\n    return this.organizationService.create(createOrganizationDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.organizationService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.organizationService.findOne(id);\n  }\n\n  @Get()\n  findSome(@Query('name') name: string) {\n    return this.organizationService.findSome(name);\n  }\n\n  @Put(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateOrganizationDto: UpdateOrganizationDto,\n  ) {\n    return this.organizationService.update(id, updateOrganizationDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.organizationService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganizationModule.html":{"url":"modules/OrganizationModule.html","title":"module - OrganizationModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_providers\n\n\n\n\nOrganizationService\n\nOrganizationService\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/organization/organization.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrganizationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrganizationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { OrganizationService } from './organization.service';\nimport { OrganizationController } from './organization.controller';\nimport { Organization } from './organization.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Organization])],\n  controllers: [OrganizationController],\n  providers: [OrganizationService],\n})\nexport class OrganizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/organization/organization.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                findSome\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/organization/organization.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createOrganizationDto: CreateOrganizationDto)\n                \n            \n\n\n            \n                \n                    Defined in src/organization/organization.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrganizationDto\n                                    \n                                                CreateOrganizationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/organization/organization.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/organization/organization.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findSome\n                        \n                        \n                    \n                \n            \n            \n                \nfindSome(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/organization/organization.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/organization/organization.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateOrganizationDto: UpdateOrganizationDto)\n                \n            \n\n\n            \n                \n                    Defined in src/organization/organization.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateOrganizationDto\n                                    \n                                                UpdateOrganizationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { CreateOrganizationDto } from './dto/create-organization.dto';\nimport { UpdateOrganizationDto } from './dto/update-organization.dto';\nimport { Organization } from './organization.entity';\n\n@Injectable()\nexport class OrganizationService {\n  constructor(\n    @InjectRepository(Organization)\n    private readonly organizationsRepository: Repository,\n  ) {}\n\n  create(createOrganizationDto: CreateOrganizationDto) {\n    const organization = new Organization();\n    organization.name = createOrganizationDto.name;\n    organization.management = createOrganizationDto.management;\n    organization.employeeCount = createOrganizationDto.employeeCount;\n    organization.startDate = createOrganizationDto.startDate;\n\n    return this.organizationsRepository.save(organization);\n  }\n\n  findAll() {\n    return this.organizationsRepository.find();\n  }\n\n  findSome(name: string) {\n    return this.organizationsRepository\n      .createQueryBuilder('organization')\n      .where('organization.name = :name', { name: name })\n      .getMany();\n  }\n\n  findOne(id: string) {\n    return this.organizationsRepository.findOne({ id: id });\n  }\n\n  update(id: string, updateOrganizationDto: UpdateOrganizationDto) {\n    return this.organizationsRepository.update(\n      { id: id },\n      updateOrganizationDto,\n    );\n  }\n\n  remove(id: string) {\n    return this.organizationsRepository.delete({ id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrganizationDto.html":{"url":"classes/UpdateOrganizationDto.html","title":"class - UpdateOrganizationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrganizationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/organization/dto/update-organization.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { PartialType as SwaggerPartialType } from '@nestjs/swagger';\n\nimport { CreateOrganizationDto } from './create-organization.dto';\n\nexport class UpdateOrganizationDto extends PartialType(\n  SwaggerPartialType(CreateOrganizationDto),\n) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database.config.ts\n            \n            injectable\n            DatabaseConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/organization/dto/create-organization.dto.ts\n            \n            class\n            CreateOrganizationDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/organization/dto/update-organization.dto.ts\n            \n            class\n            UpdateOrganizationDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/organization/organization.controller.ts\n            \n            controller\n            OrganizationController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/organization/organization.entity.ts\n            \n            class\n            Organization\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/organization/organization.service.ts\n            \n            injectable\n            OrganizationService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.5.4\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.4\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/mapped-types : ^0.1.1\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.7.5\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            @nestjsx/crud : ^4.6.2\n        \n            dotenv-safe : ^8.2.0\n        \n            pg : ^8.5.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            swagger-ui-express : ^4.1.5\n        \n            typeorm : ^0.2.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Management   (src/.../organization.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/organization/organization.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        Management\n                    \n                \n                        \n                            \n                                 private\n                            \n                        \n                        \n                            \n                                 public\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covCode documentation\n# generate code hierarchy documentation\nnpm run compodocAccessible at: http://localhost:8080\nDemo\nHosted on Heroku:\nhttps://nestjs-organization-api.herokuapp.com/api\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_providers\n\n\n\n\nOrganizationModule\n\nOrganizationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nOrganizationModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => ({\n  port: Number(process.env.APP_PORT),\n  database: {\n    type: 'postgres',\n    host: process.env.DB_HOST,\n    port: process.env.DB_PORT,\n    username: process.env.DB_USERNAME,\n    password: process.env.DB_PASSWORD,\n    database: process.env.DB_NAME,\n    synchronize: true,\n    logging: false,\n    entities: ['dist/**/*.entity.js'],\n  },\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
